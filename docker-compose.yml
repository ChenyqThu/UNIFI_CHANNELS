version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: unifi_distributors
      POSTGRES_USER: unifi_user
      POSTGRES_PASSWORD: unifi_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U unifi_user -d unifi_distributors"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Main API service
  api:
    build:
      context: .
      target: production
    environment:
      - DATABASE_URL=postgresql://unifi_user:unifi_password@postgres:5432/unifi_distributors
      - REDIS_URL=redis://redis:6379
      - NOTION_TOKEN=${NOTION_TOKEN}
      - NOTION_DATABASE_ID=${NOTION_DATABASE_ID}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Scheduler service
  scheduler:
    build:
      context: .
      target: scheduler
    environment:
      - DATABASE_URL=postgresql://unifi_user:unifi_password@postgres:5432/unifi_distributors
      - REDIS_URL=redis://redis:6379
      - NOTION_TOKEN=${NOTION_TOKEN}
      - NOTION_DATABASE_ID=${NOTION_DATABASE_ID}
      - SCRAPING_INTERVAL_HOURS=24
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # CLI service for one-off tasks
  cli:
    build:
      context: .
      target: cli
    environment:
      - DATABASE_URL=postgresql://unifi_user:unifi_password@postgres:5432/unifi_distributors
      - REDIS_URL=redis://redis:6379
      - NOTION_TOKEN=${NOTION_TOKEN}
      - NOTION_DATABASE_ID=${NOTION_DATABASE_ID}
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - tools
    volumes:
      - .:/app

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: unifi-network